from PIL import Image
from PIL import ImageGrab#这个是屏幕截图的时候用的
from PIL import ImageFilter   #图像增强卷积的时候用的
from PIL import ImageEnhance   #对比度增强的时候用的
import os
import numpy as np
import cv2 as cv
#image=Image.open(r'C:\Users\36554\Desktop\123.jpg')
#print(im.format)#查看图像格式  JPEG
#print(im.size)#查看图像大小     (230, 322)
#print(im.height)#查看图像高度     322
#print(im.width)#查看图像宽度       230
#print(im.histogram())#查看图像的直方图，如果图像包含多个通道，则返回所有通道的直方图
#[0, 0, 1, 2, 3, 3, 5, 8, 15, 13, 15, 28, 48, 36, 34, 39, 41, 31, 31, 36, 36, 39, 52, 41, 65, 81, 69, 78, 75, 71, 79, 66, 74, 71, 67, 60, 49, 61, 72, 65, 60, 52, 57, 54, 57, 50, 60, 42, 47, 49, 47, 48, 49, 54, 58, 45, 57, 37, 51, 40, 55, 46, 49, 42, 42, 31, 44, 45, 40, 38, 36, 34, 39, 30, 35, 29, 26, 39, 31, 26, 31, 27, 40, 34, 19, 31, 35, 33, 31, 14, 31, 26, 28, 32, 21, 23, 33, 23, 30, 36, 38, 34, 35, 34, 40, 26, 32, 23, 27, 34, 26, 29, 39, 29, 38, 32, 47, 45, 71, 52, 79, 108, 128, 146, 160, 231, 192, 231, 185, 277, 282, 300, 355, 425, 625, 716, 783, 820, 690, 719, 770, 615, 474, 523, 482, 525, 488, 500, 447, 507, 493, 525, 493, 473, 546, 525, 524, 533, 584, 644, 742, 778, 769, 688, 717, 732, 716, 743, 741, 750, 732, 736, 707, 830, 814, 861, 818, 803, 653, 665, 630, 557, 586, 627, 640, 637, 720, 736, 740, 673, 677, 667, 714, 657, 692, 665, 677, 720, 755, 713, 767, 732, 750, 792, 795, 727, 821, 845, 764, 747, 788, 815, 751, 714, 660, 720, 647, 674, 682, 588, 598, 520, 526, 480, 464, 424, 411, 356, 317, 285, 268, 241, 235, 207, 202, 175, 175, 191, 151, 153, 127, 154, 126, 103, 117, 126, 105, 123, 118, 100, 77, 72, 54, 43, 37, 79, 0, 0, 0, 1, 5, 3, 6, 28, 17, 20, 36, 60, 55, 66, 69, 89, 88, 97, 101, 100, 128, 97, 85, 84, 69, 81, 74, 76, 67, 82, 85, 76, 62, 63, 73, 47, 64, 50, 61, 47, 49, 58, 61, 45, 74, 58, 62, 49, 62, 54, 55, 57, 44, 43, 44, 60, 61, 50, 47, 34, 54, 38, 50, 40, 40, 50, 43, 45, 61, 38, 49, 55, 44, 46, 41, 48, 57, 55, 50, 46, 60, 62, 57, 63, 53, 56, 53, 68, 66, 73, 78, 71, 61, 82, 67, 78, 83, 95, 92, 85, 108, 120, 89, 114, 114, 97, 110, 130, 116, 135, 148, 117, 138, 141, 135, 173, 155, 168, 198, 179, 177, 204, 216, 249, 285, 301, 327, 314, 367, 367, 408, 472, 503, 445, 467, 597, 754, 942, 898, 959, 1047, 1029, 897, 866, 795, 701, 754, 706, 842, 740, 862, 827, 832, 756, 808, 882, 921, 912, 989, 1022, 954, 946, 976, 1057, 1168, 1176, 1225, 1159, 1093, 1120, 1151, 1056, 1071, 1029, 1019, 1028, 1021, 964, 1031, 958, 984, 856, 863, 828, 766, 744, 784, 787, 720, 733, 618, 615, 562, 525, 419, 379, 315, 291, 280, 281, 222, 225, 218, 188, 188, 185, 235, 241, 207, 172, 174, 164, 164, 161, 134, 180, 150, 147, 153, 138, 126, 117, 119, 116, 110, 102, 97, 94, 71, 77, 64, 62, 65, 76, 41, 77, 55, 72, 50, 56, 45, 44, 30, 33, 38, 33, 21, 16, 23, 11, 18, 15, 9, 8, 5, 9, 0, 0, 0, 0, 0, 2, 2, 5, 3, 11, 12, 11, 25, 31, 31, 52, 69, 66, 112, 106, 109, 116, 131, 110, 107, 98, 68, 79, 80, 69, 65, 85, 75, 65, 71, 67, 77, 61, 81, 65, 52, 58, 60, 55, 62, 54, 51, 52, 60, 60, 63, 53, 54, 60, 74, 52, 48, 42, 53, 56, 53, 63, 50, 53, 50, 63, 68, 50, 63, 54, 48, 57, 57, 57, 62, 76, 54, 65, 66, 48, 72, 78, 68, 71, 79, 72, 67, 70, 85, 75, 65, 90, 94, 79, 91, 71, 99, 96, 76, 108, 111, 111, 110, 101, 115, 119, 121, 96, 136, 144, 126, 138, 160, 140, 158, 138, 164, 158, 159, 129, 155, 148, 158, 178, 195, 174, 183, 188, 218, 206, 193, 226, 235, 248, 230, 272, 240, 284, 264, 304, 349, 314, 377, 394, 398, 385, 415, 501, 487, 545, 505, 527, 641, 741, 863, 1031, 1036, 1031, 924, 900, 803, 858, 849, 846, 761, 852, 824, 842, 885, 950, 917, 969, 930, 927, 971, 974, 1016, 969, 959, 935, 942, 948, 977, 1005, 1014, 964, 984, 967, 840, 834, 908, 936, 858, 862, 922, 906, 887, 910, 877, 834, 742, 720, 716, 661, 620, 645, 655, 635, 565, 576, 430, 388, 347, 322, 276, 231, 242, 212, 156, 162, 153, 143, 149, 161, 138, 129, 122, 131, 126, 119, 107, 126, 106, 117, 117, 105, 94, 88, 84, 79, 70, 70, 53, 52, 50, 45, 27, 28, 26, 21, 17, 26, 17, 17, 7, 31]

#print(im.histogram()[:256])#查看图像第一个通道的直方图
#[0, 0, 1, 2, 3, 3, 5, 8, 15, 13, 15, 28, 48, 36, 34, 39, 41, 31, 31, 36, 36, 39, 52, 41, 65, 81, 69, 78, 75, 71, 79, 66, 74, 71, 67, 60, 49, 61, 72, 65, 60, 52, 57, 54, 57, 50, 60, 42, 47, 49, 47, 48, 49, 54, 58, 45, 57, 37, 51, 40, 55, 46, 49, 42, 42, 31, 44, 45, 40, 38, 36, 34, 39, 30, 35, 29, 26, 39, 31, 26, 31, 27, 40, 34, 19, 31, 35, 33, 31, 14, 31, 26, 28, 32, 21, 23, 33, 23, 30, 36, 38, 34, 35, 34, 40, 26, 32, 23, 27, 34, 26, 29, 39, 29, 38, 32, 47, 45, 71, 52, 79, 108, 128, 146, 160, 231, 192, 231, 185, 277, 282, 300, 355, 425, 625, 716, 783, 820, 690, 719, 770, 615, 474, 523, 482, 525, 488, 500, 447, 507, 493, 525, 493, 473, 546, 525, 524, 533, 584, 644, 742, 778, 769, 688, 717, 732, 716, 743, 741, 750, 732, 736, 707, 830, 814, 861, 818, 803, 653, 665, 630, 557, 586, 627, 640, 637, 720, 736, 740, 673, 677, 667, 714, 657, 692, 665, 677, 720, 755, 713, 767, 732, 750, 792, 795, 727, 821, 845, 764, 747, 788, 815, 751, 714, 660, 720, 647, 674, 682, 588, 598, 520, 526, 480, 464, 424, 411, 356, 317, 285, 268, 241, 235, 207, 202, 175, 175, 191, 151, 153, 127, 154, 126, 103, 117, 126, 105, 123, 118, 100, 77, 72, 54, 43, 37, 79]

#print(im.getpixel((150,80)))#读取图像像素值，参数必须是元组，代表是坐标，返回值为红绿蓝三原色分量的值(201, 176, 171)
#im.putpixel((100,50),(128,30,120))#修改指定位置的像素值
#print(im.getpixel((100,50)))
#(128, 30, 120)
#im.save('2.jpg')#把图像保存为另一个文件，原文件不会消失

#im.show()
#im=im.resize((1200,600))#对图片进行缩放
#im.save('changeshape100.jpg')#对原图片进行格式转换，原图像不会丢失
#im=im.rotate(180)#将图像逆时针转90度
#im=im.transpose(Image.FLIP_LEFT_RIGHT)#水平翻转，就是左右的图像换换位置
#im=im.transpose(Image.FLIP_TOP_BOTTOM)#上下翻转

#图像的裁剪与粘贴
#box=(120,194,220,294)   #切的范围，保证切的是个矩形
#region=im.crop(box)     #这个就是切的那一块
#region.show()
#region2=region.transpose(Image.ROTATE_180)#这个是把刚才裁下来的那块给旋转180度
#region2=region.rotate(180)
#region2.show()
#im.paste(region2,box)#把某个裁剪下来的块放在某个位置上
#im.show()






#图像通道分离和合并
#r,g,b=im.split()
#imnew=Image.merge(im.mode,(r,g,b))
#imnew.show()
#print(imnew.size)



#创建缩略图
#im.thumbnail((50,20))#参数为缩略图尺寸
#im.show()
#im.save('2.jpg')#保存缩略图

#屏幕截图
#im=ImageGrab.grab((0,0,500,200))#带参数是截取屏幕指定区域的
#im=ImageGrab.grab()    #括号里不带参数的是截取整个屏幕的
#im.show()

#图像增强
#im1=image.filter(ImageFilter.DETAIL)  #这个玩意可以把是图片更清晰
#im1=image.filter(ImageFilter.EDGE_ENHANCE)#边缘增强
#im1=image.filter(ImageFilter.EDGE_ENHANCE_MORE)#这个边缘更强大
#im1.show()

#图像模糊
#im=im.filter(ImageFilter.BLUR)  #这个玩意是用来模糊的
#im=im.filter(ImageFilter.GaussianBlur)#这个是高斯模糊
#im=image.filter(ImageFilter.MedianFilter)  #中值滤波
#im.show()
#图像边缘提取
# im=image.filter(ImageFilter.FIND_EDGES)
# im.show()

#图像点运算
# im=im.point(lambda i:i*1.8)#图片变亮
# im=im.point(lambda i:i*0.7)#图片变暗
# im=im.point(lambda i:i*1.8 if i <100 else i*0.7)#自定义调整明暗度
# im.show()


#图像冷暖色调节
# r,g,b=image.split()
# r=r.point(lambda i:i*1.3)
# g=g.point(lambda i:i*1.3)
# b=b.point(lambda i:i*5)
# im=Image.merge(image.mode,(r,g,b))#合并图像
# im.show()







#图像对比度增强
# image=Image.open(r'C:\Users\36554\Desktop\123.jpg')
# im=ImageEnhance.Contrast(image)
# im=im.enhance(1.5)#对比度为原来的三倍
# im.show()
# im.save('defog1.jpg')


# 原始图像
#image=Image.open('8.jpg')
#image = Image.open('lena.jpg')
#image.show()

#亮度增强
# enh_bri = ImageEnhance.Brightness(image)
# brightness = 3
# image_brightened = enh_bri.enhance(brightness)
# image_brightened.show()








# 色度增强
# image=Image.open('3.bmp')
# enh_col = ImageEnhance.Color(image)
# color = 5.0
# image_colored = enh_col.enhance(color)
# image_colored.show()
# image_colored.save('defog.jpg')

# 对比度增强
# enh_con = ImageEnhance.Contrast(image)
# contrast = 2.0
# image_contrasted = enh_con.enhance(contrast)
# image_contrasted.show()
# image_contrasted.save('defog1.jpg')
# 锐度增强
# image.show()
# enh_sha = ImageEnhance.Sharpness(image)
# sharpness = 15.
# image_sharped = enh_sha.enhance(sharpness)
# image_sharped.show()
# image_sharped.save('defog.jpg')


#im1=image.filter(ImageFilter.DETAIL)
#
# im1.show()




#im1.show()
if __name__=='__main__':
    list1=os.listdir(r'C:\Users\36554\Desktop\500\500')
    for i in list1:
        path = os.path.join(r'C:\Users\36554\Desktop\500\500', i)
        image = Image.open(path)
        im = ImageEnhance.Contrast(image)
        im = im.enhance(1.5)  # 对比度为原来的三倍
        im.save(os.path.join(r'C:\Users\36554\Desktop\500\tongtai',i))